@import url('https://fonts.googleapis.com/css2?family=Fira+Mono:wght@400;500;700&family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap');

:root{
  --font-main: "Lato", Arial, Helvetica, Sans-Serif;
  --font-mono: "Fira Mono", monospace;


  --pink-accent: #FF5AA4;
  --pink-mid: #ffd1e5;
  --pink-light: #fff0f7;
}
html{
  font-size: 14px;
}
body{
  margin: 0;
  background-color: #eee;
  font-family: var(--font-main);
}
button{
  padding: 0;
  border: none;
  background-color: transparent;
  font-family: inherit;
  cursor: pointer;
}
h1, h2, h3, h4, p{
  margin: 0;
}
h1{
  font-size: 2rem;
  margin-bottom: 1.5rem;
  font-weight: 600;
  width: 100%;
  text-align: left;
}
.flex{
  display: flex;
}
.flex.column{
  flex-direction: column;
}
.align-center{
  align-items: center;
}
.justify-center{
  justify-content: center;
}
.justify-end{
  justify-content: flex-end;
}
.space-between{
  justify-content: space-between;
}


.pseudo{
  position: relative;
}
.pseudo::before,
.pseudo::after{
  position: absolute;
  content: "";
  display: block;
}


#root{
  padding-top: 4rem;
}
.card{
  position: relative;
  padding: 4rem 5rem;
  background-color: #fff;
  border-radius: 3rem;
}
#puzzle-container{
  display: grid;
  border-radius: 1.5rem;
  overflow: hidden;
  border: 3px #000 solid;
  grid-template-columns: repeat(9, 1fr);
}
#puzzle-container .cell{
  position: relative;
  cursor: pointer;

  font-family: var(--font-mono);
  font-size: 2rem;
  font-weight: 500;

  display: flex;
  align-items: center;
  justify-content: center;
  width: 3.6rem;
  height: 3.6rem;
  box-sizing: border-box;
  border: .5px solid #bbb;
  background-color: #fff;
  transition: color .3s, background-color .3s;
}
#puzzle-container .cell.initial{
  color: #888;
}
#puzzle-container .cell.cross{
  background-color: var(--pink-mid);
}
#puzzle-container .cell.active{
  background-color: var(--pink-accent);
  border-color: #000;
  color: #fff;
}
#puzzle-container .cell.border-left{
  border-left: 1px solid #000;
}
#puzzle-container .cell.border-right{
  border-right: 1px solid #000;
}
#puzzle-container .cell.border-bottom{
  border-bottom: 1px solid #000;
}
#puzzle-container .cell.border-top{
  border-top: 1px solid #000;
}



#puzzle-container .cell .pencil{
  position: absolute;
  font-size: .8rem;
  opacity: .5;
}
#puzzle-container .cell .pencil[position="1"]{
  transform: translate(-12px, -12px);
}
#puzzle-container .cell .pencil[position="2"]{
  transform: translateY(-12px);
}
#puzzle-container .cell .pencil[position="3"]{
  transform: translate(12px, -12px);
}
#puzzle-container .cell .pencil[position="4"]{
  transform: translate(-12px, 0);
}
#puzzle-container .cell .pencil[position="5"]{
  transform: translate(0, 0);
}
#puzzle-container .cell .pencil[position="6"]{
  transform: translate(12px, 0);
}
#puzzle-container .cell .pencil[position="7"]{
  transform: translate(-12px, 12px);
}
#puzzle-container .cell .pencil[position="8"]{
  transform: translate(0, 12px);
}
#puzzle-container .cell .pencil[position="9"]{
  transform: translate(12px, 12px);
}



#num-buttons{
  margin: 1.5rem 0 1rem;
}
#num-buttons button{
  border: 1px #000 solid;
  width: 3.5rem;
  height: 3.5rem;
  margin: 0 .15rem;
  border-radius: 1rem;
  font-size: 1.5rem;
  font-weight: 600;
}



.controls .action{
  width: 3.5rem;
  height: 3.5rem;
  margin: 0 .15rem;
  border-radius: 50%;
  border: 1px #000 solid;
  background-color: #fff;
  transition: filter .3s;
}
.controls .action:hover{
  filter: invert(1);
}
.controls .action::before,
.controls .action::after{
  width: 100%;
  height: 100%;
  top: 0;
  background-repeat: no-repeat;
  background-size: 40%;
  background-position: center;
}
.controls .action.eraser::before,
.controls .action.eraser::after{
  background-image: url(style/media/actions/erase.svg);
}
.controls .action.undo::before,
.controls .action.undo::after{
  background-image: url(style/media/actions/undo.svg);
}
.controls .action.hint::before,
.controls .action.hint::after{
  background-image: url(style/media/actions/hint.svg);
}
.controls .action.edit::before,
.controls .action.edit::after{
  background-image: url(style/media/actions/edit.svg);
}
.controls .action.pencilMarks::before,
.controls .action.pencilMarks::after{
  background-image: url(style/media/actions/pencil.svg);
}

/* HIGHLIGHTING FOR ACTIVE STATE WILL GO HERE */
.controls .action[data-instate="true"]{
}



#reset-game-button{
  position: absolute;
  top: 3.5rem;
  padding: 1rem 2rem;
  border-radius: 2rem;
  right: 5rem;
  background-color: var(--pink-accent);
  color: #fff;
  font-weight: 600;
  font-size: .8rem;
  font-family: inherit;
  text-transform: uppercase;
  border: 2px var(--pink-accent) solid;
  transition: background-color .3s, color .3s;
}
#reset-game-button:hover{
  background-color: transparent;
  color: var(--pink-accent);
}


.popup{
  position: fixed;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, .4);
  top: 0;
  left: 0;
}
.popup .card{
  padding: 2.5rem 4rem;
}